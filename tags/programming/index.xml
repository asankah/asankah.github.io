<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Strong Opinions, Weekly Held</title><link>https://xn--izc.com/tags/programming/</link><description>Recent content in programming on Strong Opinions, Weekly Held</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Asanka Herath</copyright><lastBuildDate>Mon, 06 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xn--izc.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Visualizing A Million People</title><link>https://xn--izc.com/blog/visualizing-people-2/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://xn--izc.com/blog/visualizing-people-2/</guid><description>If your feature pisses off a million people what does this angry mob look like? Spoiler: We only get to 750,000.</description></item><item><title>Shannon Paper</title><link>https://xn--izc.com/blog/shannon-paper/</link><pubDate>Fri, 26 Mar 2021 16:14:20 -0400</pubDate><guid>https://xn--izc.com/blog/shannon-paper/</guid><description>Claude Shannon’s &lt;em>A mathematical theory of communication&lt;/em> is an oft cited classic in information theory. Let’s dive in and try to tease apart the “why”s that are often overlooked when people build on top of the introduced theory. They are definitely things that I didn’t consider to be obvious without the benefit of reading the paper.</description></item><item><title>On WontFixing Bugs</title><link>https://xn--izc.com/blog/on-wontfixing-bugs/</link><pubDate>Tue, 02 Mar 2021 17:15:06 -0500</pubDate><guid>https://xn--izc.com/blog/on-wontfixing-bugs/</guid><description>&lt;p>Large projects accumulate a large number of issue reports over time. This is normal. Typically for a “successful” project the rate of new issues being reported will exceed the rate of issues being fixed. Hence the growth.&lt;/p>
&lt;p>But what are they to do about this ever-growing pile of bugs?&lt;/p></description></item><item><title>Visualizing Internet Users</title><link>https://xn--izc.com/blog/visualizing-people/</link><pubDate>Sat, 21 Nov 2020 11:37:53 -0500</pubDate><guid>https://xn--izc.com/blog/visualizing-people/</guid><description>What does 0.3%1 of internet users look like?
As of this writing the global population hovers around 7.7 billion according to the World Population Clock.2
Screenshot from census.gov showing the world population clock. The International Telecommunications Union “estimates that at the end of 2019, 53.6 per cent of the global population, or 4.1 billion people, are using the internet.”3
Screenshot from itu.int showing historical internet usage numbers as a percentage of the world population So a 0.</description></item><item><title>Things You Can Do With Neovim and Vscode That You Can't Do With Neovim Alone</title><link>https://xn--izc.com/blog/things-you-can-do-with-nvim-and-vscode/</link><pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate><guid>https://xn--izc.com/blog/things-you-can-do-with-nvim-and-vscode/</guid><description>This is the third time I’ve tried in earnest to switch to VSCode from Vim (or Neovim in my case) for reasons not all of which are relevant to this post. But I love Vim style modal editing and I’ve grown accustomed to some features that aren’t present or not well emulated in VSCodeVim.
Enter VSCode Neovim. I was intrigued by their claim to integrate Neovim instead of trying to emulate Vim.</description></item><item><title>Names for Name Conventions</title><link>https://xn--izc.com/blog/symbol-name-types/</link><pubDate>Mon, 24 Aug 2020 12:32:45 -0400</pubDate><guid>https://xn--izc.com/blog/symbol-name-types/</guid><description>Names I’ve seen used to refer to naming conventions:
snake_case, hacker_case, unix_hacker_style : Everything is lower case, though exceptions exist. E.g. HTTP_foo_bar. SCREAMING_SNAKE_CASE : Usually reserved for macros and constants. camelCase : The first letter is lowercase. PascalCase : The first letter is uppercase. kabob-case : Like snake_case, but uses dashes instead of underscores. Common for command-line options1, CSS styles, commands (e.g. git-receive-pack). While looking idly looking for details on this, I stumbled on this Medium post which is relevant.</description></item></channel></rss>